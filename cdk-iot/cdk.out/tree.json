{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree",
        "constructInfo": {
          "fqn": "constructs.Construct",
          "version": "10.1.24"
        }
      },
      "CdkIotStack": {
        "id": "CdkIotStack",
        "path": "CdkIotStack",
        "children": {
          "thermometer-storage": {
            "id": "thermometer-storage",
            "path": "CdkIotStack/thermometer-storage",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CdkIotStack/thermometer-storage/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {
                    "bucketName": "s3-themometer-storage",
                    "publicAccessBlockConfiguration": {
                      "blockPublicAcls": true,
                      "blockPublicPolicy": true,
                      "ignorePublicAcls": true,
                      "restrictPublicBuckets": true
                    },
                    "tags": [
                      {
                        "key": "aws-cdk:auto-delete-objects",
                        "value": "true"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3.CfnBucket",
                  "version": "2.26.0"
                }
              },
              "Policy": {
                "id": "Policy",
                "path": "CdkIotStack/thermometer-storage/Policy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CdkIotStack/thermometer-storage/Policy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                      "aws:cdk:cloudformation:props": {
                        "bucket": {
                          "Ref": "thermometerstorageA03733C7"
                        },
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "s3:DeleteObject*",
                                "s3:GetBucket*",
                                "s3:List*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "thermometerstorageA03733C7",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "thermometerstorageA03733C7",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.CfnBucketPolicy",
                      "version": "2.26.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3.BucketPolicy",
                  "version": "2.26.0"
                }
              },
              "AutoDeleteObjectsCustomResource": {
                "id": "AutoDeleteObjectsCustomResource",
                "path": "CdkIotStack/thermometer-storage/AutoDeleteObjectsCustomResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "CdkIotStack/thermometer-storage/AutoDeleteObjectsCustomResource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.26.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.26.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_s3.Bucket",
              "version": "2.26.0"
            }
          },
          "Custom::S3AutoDeleteObjectsCustomResourceProvider": {
            "id": "Custom::S3AutoDeleteObjectsCustomResourceProvider",
            "path": "CdkIotStack/Custom::S3AutoDeleteObjectsCustomResourceProvider",
            "children": {
              "Staging": {
                "id": "Staging",
                "path": "CdkIotStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Staging",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.AssetStaging",
                  "version": "2.26.0"
                }
              },
              "Role": {
                "id": "Role",
                "path": "CdkIotStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.26.0"
                }
              },
              "Handler": {
                "id": "Handler",
                "path": "CdkIotStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.26.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.CustomResourceProvider",
              "version": "2.26.0"
            }
          },
          "StorageBucketName": {
            "id": "StorageBucketName",
            "path": "CdkIotStack/StorageBucketName",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.26.0"
            }
          },
          "s3Arn": {
            "id": "s3Arn",
            "path": "CdkIotStack/s3Arn",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.26.0"
            }
          },
          "s3Path": {
            "id": "s3Path",
            "path": "CdkIotStack/s3Path",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.26.0"
            }
          },
          "themometer-web": {
            "id": "themometer-web",
            "path": "CdkIotStack/themometer-web",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CdkIotStack/themometer-web/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {
                    "bucketName": "s3-themometer-web",
                    "publicAccessBlockConfiguration": {
                      "blockPublicAcls": true,
                      "blockPublicPolicy": true,
                      "ignorePublicAcls": true,
                      "restrictPublicBuckets": true
                    },
                    "tags": [
                      {
                        "key": "aws-cdk:auto-delete-objects",
                        "value": "true"
                      },
                      {
                        "key": "aws-cdk:cr-owned:dcebfb66",
                        "value": "true"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3.CfnBucket",
                  "version": "2.26.0"
                }
              },
              "Policy": {
                "id": "Policy",
                "path": "CdkIotStack/themometer-web/Policy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CdkIotStack/themometer-web/Policy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                      "aws:cdk:cloudformation:props": {
                        "bucket": {
                          "Ref": "themometerwebA10CBA95"
                        },
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "s3:DeleteObject*",
                                "s3:GetBucket*",
                                "s3:List*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "themometerwebA10CBA95",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "themometerwebA10CBA95",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": "s3:GetObject",
                              "Effect": "Allow",
                              "Principal": {
                                "CanonicalUser": {
                                  "Fn::GetAtt": [
                                    "cloudfrontOrigin1S3Origin57D92FB4",
                                    "S3CanonicalUserId"
                                  ]
                                }
                              },
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    {
                                      "Fn::GetAtt": [
                                        "themometerwebA10CBA95",
                                        "Arn"
                                      ]
                                    },
                                    "/*"
                                  ]
                                ]
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.CfnBucketPolicy",
                      "version": "2.26.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3.BucketPolicy",
                  "version": "2.26.0"
                }
              },
              "AutoDeleteObjectsCustomResource": {
                "id": "AutoDeleteObjectsCustomResource",
                "path": "CdkIotStack/themometer-web/AutoDeleteObjectsCustomResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "CdkIotStack/themometer-web/AutoDeleteObjectsCustomResource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.26.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.26.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_s3.Bucket",
              "version": "2.26.0"
            }
          },
          "WebBucketName": {
            "id": "WebBucketName",
            "path": "CdkIotStack/WebBucketName",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.26.0"
            }
          },
          "DeployReactApp": {
            "id": "DeployReactApp",
            "path": "CdkIotStack/DeployReactApp",
            "children": {
              "AwsCliLayer": {
                "id": "AwsCliLayer",
                "path": "CdkIotStack/DeployReactApp/AwsCliLayer",
                "children": {
                  "Code": {
                    "id": "Code",
                    "path": "CdkIotStack/DeployReactApp/AwsCliLayer/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "CdkIotStack/DeployReactApp/AwsCliLayer/Code/Stage",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.AssetStaging",
                          "version": "2.26.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "CdkIotStack/DeployReactApp/AwsCliLayer/Code/AssetBucket",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                          "version": "2.26.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                      "version": "2.26.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "CdkIotStack/DeployReactApp/AwsCliLayer/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::LayerVersion",
                      "aws:cdk:cloudformation:props": {
                        "content": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "8ad7bbf8be94e05d569da95ddb82511dcc959f25054825394cbb86028ccd1b6a.zip"
                        },
                        "description": "/opt/awscli/aws"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnLayerVersion",
                      "version": "2.26.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.lambda_layer_awscli.AwsCliLayer",
                  "version": "2.26.0"
                }
              },
              "CustomResourceHandler": {
                "id": "CustomResourceHandler",
                "path": "CdkIotStack/DeployReactApp/CustomResourceHandler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.SingletonFunction",
                  "version": "2.26.0"
                }
              },
              "Asset1": {
                "id": "Asset1",
                "path": "CdkIotStack/DeployReactApp/Asset1",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "CdkIotStack/DeployReactApp/Asset1/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.26.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "CdkIotStack/DeployReactApp/Asset1/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.26.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.26.0"
                }
              },
              "CustomResource": {
                "id": "CustomResource",
                "path": "CdkIotStack/DeployReactApp/CustomResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "CdkIotStack/DeployReactApp/CustomResource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.26.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.26.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_s3_deployment.BucketDeployment",
              "version": "2.26.0"
            }
          },
          "Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C": {
            "id": "Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C",
            "path": "CdkIotStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "CdkIotStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CdkIotStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.26.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "CdkIotStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "CdkIotStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "s3:GetBucket*",
                                    "s3:GetObject*",
                                    "s3:List*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":s3:::",
                                          {
                                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                                          },
                                          "/*"
                                        ]
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":s3:::",
                                          {
                                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                                          }
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "s3:Abort*",
                                    "s3:DeleteObject*",
                                    "s3:GetBucket*",
                                    "s3:GetObject*",
                                    "s3:List*",
                                    "s3:PutObject",
                                    "s3:PutObjectLegalHold",
                                    "s3:PutObjectRetention",
                                    "s3:PutObjectTagging",
                                    "s3:PutObjectVersionTagging"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "themometerwebA10CBA95",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "themometerwebA10CBA95",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
                            "roles": [
                              {
                                "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.26.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.26.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.26.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "CdkIotStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "CdkIotStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.26.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "CdkIotStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.26.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.26.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "CdkIotStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                      },
                      "s3Key": "f98b78092dcdd31f5e6d47489beb5f804d4835ef86a8085d0a2053cb9ae711da.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
                        "Arn"
                      ]
                    },
                    "handler": "index.handler",
                    "layers": [
                      {
                        "Ref": "DeployReactAppAwsCliLayer6C83B54F"
                      }
                    ],
                    "runtime": "python3.7",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.26.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.Function",
              "version": "2.26.0"
            }
          },
          "Stream": {
            "id": "Stream",
            "path": "CdkIotStack/Stream",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CdkIotStack/Stream/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Kinesis::Stream",
                  "aws:cdk:cloudformation:props": {
                    "name": "themometer",
                    "retentionPeriodHours": 48,
                    "streamModeDetails": {
                      "streamMode": "ON_DEMAND"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_kinesis.CfnStream",
                  "version": "2.26.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_kinesis.Stream",
              "version": "2.26.0"
            }
          },
          "StreamARN": {
            "id": "StreamARN",
            "path": "CdkIotStack/StreamARN",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.26.0"
            }
          },
          "sns-iot": {
            "id": "sns-iot",
            "path": "CdkIotStack/sns-iot",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CdkIotStack/sns-iot/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::SNS::Topic",
                  "aws:cdk:cloudformation:props": {
                    "topicName": "sns-iot"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_sns.CfnTopic",
                  "version": "2.26.0"
                }
              },
              "storytimebot21@gmail.com": {
                "id": "storytimebot21@gmail.com",
                "path": "CdkIotStack/sns-iot/storytimebot21@gmail.com",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CdkIotStack/sns-iot/storytimebot21@gmail.com/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::SNS::Subscription",
                      "aws:cdk:cloudformation:props": {
                        "protocol": "email",
                        "topicArn": {
                          "Ref": "snsiot647BE6CE"
                        },
                        "endpoint": "storytimebot21@gmail.com"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_sns.CfnSubscription",
                      "version": "2.26.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_sns.Subscription",
                  "version": "2.26.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sns.Topic",
              "version": "2.26.0"
            }
          },
          "snsTopicArn": {
            "id": "snsTopicArn",
            "path": "CdkIotStack/snsTopicArn",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.26.0"
            }
          },
          "LambdaKinesisStream": {
            "id": "LambdaKinesisStream",
            "path": "CdkIotStack/LambdaKinesisStream",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "CdkIotStack/LambdaKinesisStream/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CdkIotStack/LambdaKinesisStream/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.26.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "CdkIotStack/LambdaKinesisStream/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "CdkIotStack/LambdaKinesisStream/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "kinesis:DescribeStream",
                                    "kinesis:DescribeStreamSummary",
                                    "kinesis:GetRecords",
                                    "kinesis:GetShardIterator",
                                    "kinesis:ListShards",
                                    "kinesis:ListStreams",
                                    "kinesis:SubscribeToShard"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "Stream790BDEE4",
                                      "Arn"
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LambdaKinesisStreamServiceRoleDefaultPolicyF267DCB3",
                            "roles": [
                              {
                                "Ref": "LambdaKinesisStreamServiceRole1ED1B3BD"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.26.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.26.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.26.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "CdkIotStack/LambdaKinesisStream/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "CdkIotStack/LambdaKinesisStream/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.26.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "CdkIotStack/LambdaKinesisStream/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.26.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.26.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "CdkIotStack/LambdaKinesisStream/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                      },
                      "s3Key": "1f237f8bdc1f8621b653c2bc69442cb55d3ca433fabc7b6eee1dada665967e82.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "LambdaKinesisStreamServiceRole1ED1B3BD",
                        "Arn"
                      ]
                    },
                    "description": "get eventinfo from kinesis data stream",
                    "environment": {
                      "variables": {
                        "topicArn": {
                          "Ref": "snsiot647BE6CE"
                        }
                      }
                    },
                    "handler": "index.handler",
                    "runtime": "nodejs14.x",
                    "timeout": 3
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.26.0"
                }
              },
              "KinesisEventSource:CdkIotStackStream9740E320": {
                "id": "KinesisEventSource:CdkIotStackStream9740E320",
                "path": "CdkIotStack/LambdaKinesisStream/KinesisEventSource:CdkIotStackStream9740E320",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CdkIotStack/LambdaKinesisStream/KinesisEventSource:CdkIotStackStream9740E320/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "LambdaKinesisStream88AE1F2E"
                        },
                        "batchSize": 100,
                        "eventSourceArn": {
                          "Fn::GetAtt": [
                            "Stream790BDEE4",
                            "Arn"
                          ]
                        },
                        "startingPosition": "TRIM_HORIZON"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.26.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.26.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.Function",
              "version": "2.26.0"
            }
          },
          "LambdaSlack": {
            "id": "LambdaSlack",
            "path": "CdkIotStack/LambdaSlack",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "CdkIotStack/LambdaSlack/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CdkIotStack/LambdaSlack/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.26.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.26.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "CdkIotStack/LambdaSlack/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "CdkIotStack/LambdaSlack/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.26.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "CdkIotStack/LambdaSlack/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.26.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.26.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "CdkIotStack/LambdaSlack/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                      },
                      "s3Key": "93d1e254d55666854a1de90fd23697cfb9ef716a73c87bcc084acea6dbada78d.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "LambdaSlackServiceRole519A82E6",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "token": "sample-3205298473938-3233090599600-5Kr8k7W8dieUwoL5d7GekmpJ"
                      }
                    },
                    "handler": "index.handler",
                    "runtime": "nodejs14.x",
                    "timeout": 10
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.26.0"
                }
              },
              "AllowInvoke:CdkIotStacksnsiot7350D5FB": {
                "id": "AllowInvoke:CdkIotStacksnsiot7350D5FB",
                "path": "CdkIotStack/LambdaSlack/AllowInvoke:CdkIotStacksnsiot7350D5FB",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "LambdaSlackA1FFF73E",
                        "Arn"
                      ]
                    },
                    "principal": "sns.amazonaws.com",
                    "sourceArn": {
                      "Ref": "snsiot647BE6CE"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                  "version": "2.26.0"
                }
              },
              "sns-iot": {
                "id": "sns-iot",
                "path": "CdkIotStack/LambdaSlack/sns-iot",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CdkIotStack/LambdaSlack/sns-iot/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::SNS::Subscription",
                      "aws:cdk:cloudformation:props": {
                        "protocol": "lambda",
                        "topicArn": {
                          "Ref": "snsiot647BE6CE"
                        },
                        "endpoint": {
                          "Fn::GetAtt": [
                            "LambdaSlackA1FFF73E",
                            "Arn"
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_sns.CfnSubscription",
                      "version": "2.26.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_sns.Subscription",
                  "version": "2.26.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.Function",
              "version": "2.26.0"
            }
          },
          "ruleRole": {
            "id": "ruleRole",
            "path": "CdkIotStack/ruleRole",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CdkIotStack/ruleRole/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "iot.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "description": "Role of Rule for IoT",
                    "roleName": "RuleRole"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                  "version": "2.26.0"
                }
              },
              "DefaultPolicy": {
                "id": "DefaultPolicy",
                "path": "CdkIotStack/ruleRole/DefaultPolicy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CdkIotStack/ruleRole/DefaultPolicy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "kinesis:PutRecord",
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::GetAtt": [
                                  "Stream790BDEE4",
                                  "Arn"
                                ]
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policyName": "ruleRoleDefaultPolicy18B4CD88",
                        "roles": [
                          {
                            "Ref": "ruleRole5807C10C"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                      "version": "2.26.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Policy",
                  "version": "2.26.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_iam.Role",
              "version": "2.26.0"
            }
          },
          "RuleRoleArn": {
            "id": "RuleRoleArn",
            "path": "CdkIotStack/RuleRoleArn",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.26.0"
            }
          },
          "TopicRule": {
            "id": "TopicRule",
            "path": "CdkIotStack/TopicRule",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::IoT::TopicRule",
              "aws:cdk:cloudformation:props": {
                "topicRulePayload": {
                  "actions": [
                    {
                      "kinesis": {
                        "streamName": "themometer",
                        "roleArn": {
                          "Fn::GetAtt": [
                            "ruleRole5807C10C",
                            "Arn"
                          ]
                        },
                        "partitionKey": "${clientToken}"
                      }
                    }
                  ],
                  "sql": "SELECT * FROM '$aws/things/+/shadow/update'",
                  "ruleDisabled": false
                },
                "ruleName": "themometer"
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_iot.CfnTopicRule",
              "version": "2.26.0"
            }
          },
          "LambdaKinesisFirehose": {
            "id": "LambdaKinesisFirehose",
            "path": "CdkIotStack/LambdaKinesisFirehose",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "CdkIotStack/LambdaKinesisFirehose/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CdkIotStack/LambdaKinesisFirehose/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.26.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.26.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "CdkIotStack/LambdaKinesisFirehose/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "CdkIotStack/LambdaKinesisFirehose/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.26.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "CdkIotStack/LambdaKinesisFirehose/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.26.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.26.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "CdkIotStack/LambdaKinesisFirehose/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                      },
                      "s3Key": "f5041f2882fb03cc46765bb1f56c90eb20c389ad2c6f99e7bf1a9dc020c67344.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "LambdaKinesisFirehoseServiceRoleA0A46308",
                        "Arn"
                      ]
                    },
                    "description": "update event sources",
                    "handler": "index.handler",
                    "runtime": "nodejs14.x",
                    "timeout": 3
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.26.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.Function",
              "version": "2.26.0"
            }
          },
          "LambdaKinesisARN": {
            "id": "LambdaKinesisARN",
            "path": "CdkIotStack/LambdaKinesisARN",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.26.0"
            }
          },
          "crawlerRole": {
            "id": "crawlerRole",
            "path": "CdkIotStack/crawlerRole",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CdkIotStack/crawlerRole/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "glue.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "description": "Role for crawler",
                    "managedPolicyArns": [
                      "arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole"
                    ],
                    "roleName": "CrawlerRole"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                  "version": "2.26.0"
                }
              },
              "DefaultPolicy": {
                "id": "DefaultPolicy",
                "path": "CdkIotStack/crawlerRole/DefaultPolicy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CdkIotStack/crawlerRole/DefaultPolicy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "s3:AbortMultipartUpload",
                                "s3:GetBucketLocation",
                                "s3:GetObject",
                                "s3:ListBucket",
                                "s3:ListBucketMultipartUploads",
                                "s3:PutObject"
                              ],
                              "Effect": "Allow",
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "thermometerstorageA03733C7",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "thermometerstorageA03733C7",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policyName": "crawlerRoleDefaultPolicy7109B2A3",
                        "roles": [
                          {
                            "Ref": "crawlerRoleCB71E89D"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                      "version": "2.26.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Policy",
                  "version": "2.26.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_iam.Role",
              "version": "2.26.0"
            }
          },
          "crawlerRoleArn": {
            "id": "crawlerRoleArn",
            "path": "CdkIotStack/crawlerRoleArn",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.26.0"
            }
          },
          "TranslateRecords": {
            "id": "TranslateRecords",
            "path": "CdkIotStack/TranslateRecords",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::Glue::Crawler",
              "aws:cdk:cloudformation:props": {
                "role": {
                  "Fn::GetAtt": [
                    "crawlerRoleCB71E89D",
                    "Arn"
                  ]
                },
                "targets": {
                  "s3Targets": [
                    {
                      "path": {
                        "Fn::Join": [
                          "",
                          [
                            "s3://",
                            {
                              "Ref": "thermometerstorageA03733C7"
                            },
                            "/themometer"
                          ]
                        ]
                      }
                    }
                  ]
                },
                "databaseName": "themometerDb",
                "name": "translate-records",
                "schedule": {
                  "scheduleExpression": "cron(15 * * * ? *)"
                },
                "schemaChangePolicy": {
                  "deleteBehavior": "DELETE_FROM_DATABASE",
                  "updateBehavior": "UPDATE_IN_DATABASE"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_glue.CfnCrawler",
              "version": "2.26.0"
            }
          },
          "TranslationRole": {
            "id": "TranslationRole",
            "path": "CdkIotStack/TranslationRole",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CdkIotStack/TranslationRole/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "firehose.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "description": "TraslationRole",
                    "managedPolicyArns": [
                      "arn:aws:iam::aws:policy/AWSLambdaExecute",
                      "arn:aws:iam::aws:policy/service-role/AWSLambdaKinesisExecutionRole",
                      "arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole"
                    ],
                    "roleName": "TranslationRole"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                  "version": "2.26.0"
                }
              },
              "DefaultPolicy": {
                "id": "DefaultPolicy",
                "path": "CdkIotStack/TranslationRole/DefaultPolicy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CdkIotStack/TranslationRole/DefaultPolicy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "s3:AbortMultipartUpload",
                                "s3:GetBucketLocation",
                                "s3:GetObject",
                                "s3:ListBucket",
                                "s3:ListBucketMultipartUploads",
                                "s3:PutObject"
                              ],
                              "Effect": "Allow",
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "thermometerstorageA03733C7",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "thermometerstorageA03733C7",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": [
                                "lambda:GetFunctionConfiguration",
                                "lambda:InvokeFunction"
                              ],
                              "Effect": "Allow",
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "LambdaKinesisFirehoseE096B30B",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "LambdaKinesisFirehoseE096B30B",
                                          "Arn"
                                        ]
                                      },
                                      ":*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": [
                                "glue:GetTable",
                                "glue:GetTableVersion",
                                "glue:GetTableVersions"
                              ],
                              "Effect": "Allow",
                              "Resource": "*"
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policyName": "TranslationRoleDefaultPolicyE90E301D",
                        "roles": [
                          {
                            "Ref": "TranslationRole574EADCA"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                      "version": "2.26.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Policy",
                  "version": "2.26.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_iam.Role",
              "version": "2.26.0"
            }
          },
          "FirehoseDeliveryStream": {
            "id": "FirehoseDeliveryStream",
            "path": "CdkIotStack/FirehoseDeliveryStream",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::KinesisFirehose::DeliveryStream",
              "aws:cdk:cloudformation:props": {
                "deliveryStreamType": "KinesisStreamAsSource",
                "extendedS3DestinationConfiguration": {
                  "bucketArn": {
                    "Fn::GetAtt": [
                      "thermometerstorageA03733C7",
                      "Arn"
                    ]
                  },
                  "bufferingHints": {
                    "intervalInSeconds": 60,
                    "sizeInMBs": 128
                  },
                  "compressionFormat": "UNCOMPRESSED",
                  "encryptionConfiguration": {
                    "noEncryptionConfig": "NoEncryption"
                  },
                  "prefix": "themometer/",
                  "errorOutputPrefix": "eror/",
                  "roleArn": {
                    "Fn::GetAtt": [
                      "TranslationRole574EADCA",
                      "Arn"
                    ]
                  },
                  "processingConfiguration": {
                    "enabled": true,
                    "processors": [
                      {
                        "type": "Lambda",
                        "parameters": [
                          {
                            "parameterName": "LambdaArn",
                            "parameterValue": {
                              "Fn::GetAtt": [
                                "LambdaKinesisFirehoseE096B30B",
                                "Arn"
                              ]
                            }
                          }
                        ]
                      }
                    ]
                  },
                  "dataFormatConversionConfiguration": {
                    "enabled": false,
                    "schemaConfiguration": {
                      "databaseName": "themometerDb",
                      "roleArn": {
                        "Fn::GetAtt": [
                          "TranslationRole574EADCA",
                          "Arn"
                        ]
                      },
                      "tableName": "themometer"
                    }
                  }
                },
                "kinesisStreamSourceConfiguration": {
                  "kinesisStreamArn": {
                    "Fn::GetAtt": [
                      "Stream790BDEE4",
                      "Arn"
                    ]
                  },
                  "roleArn": {
                    "Fn::GetAtt": [
                      "TranslationRole574EADCA",
                      "Arn"
                    ]
                  }
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_kinesisfirehose.CfnDeliveryStream",
              "version": "2.26.0"
            }
          },
          "analytics-athena-workgroup": {
            "id": "analytics-athena-workgroup",
            "path": "CdkIotStack/analytics-athena-workgroup",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::Athena::WorkGroup",
              "aws:cdk:cloudformation:props": {
                "name": "themometer-workgroup",
                "description": "athena working group",
                "recursiveDeleteOption": true,
                "state": "ENABLED",
                "workGroupConfiguration": {
                  "resultConfiguration": {
                    "outputLocation": {
                      "Fn::Join": [
                        "",
                        [
                          "s3://",
                          {
                            "Ref": "thermometerstorageA03733C7"
                          }
                        ]
                      ]
                    }
                  }
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_athena.CfnWorkGroup",
              "version": "2.26.0"
            }
          },
          "workgroupArn": {
            "id": "workgroupArn",
            "path": "CdkIotStack/workgroupArn",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.26.0"
            }
          },
          "athenaRole": {
            "id": "athenaRole",
            "path": "CdkIotStack/athenaRole",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CdkIotStack/athenaRole/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "lambda.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "description": "Athena Role",
                    "roleName": "AthenaRole"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                  "version": "2.26.0"
                }
              },
              "DefaultPolicy": {
                "id": "DefaultPolicy",
                "path": "CdkIotStack/athenaRole/DefaultPolicy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CdkIotStack/athenaRole/DefaultPolicy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "athena:BatchGetQueryExecution",
                                "athena:GetDataCatalog",
                                "athena:GetDatabase",
                                "athena:GetQueryExecution",
                                "athena:GetQueryResults",
                                "athena:GetQueryResultsStream",
                                "athena:GetTableMetadata",
                                "athena:GetWorkGroup",
                                "athena:ListDataCatalogs",
                                "athena:ListDatabases",
                                "athena:ListEngineVersions",
                                "athena:ListQueryExecutions",
                                "athena:ListTableMetadata",
                                "athena:ListWorkGroups",
                                "athena:StartQueryExecution",
                                "athena:StopQueryExecution"
                              ],
                              "Effect": "Allow",
                              "Resource": [
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:aws:athena:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":workgroup/primary"
                                    ]
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:aws:athena:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":workgroup/themometer-workgroup"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": [
                                "glue:GetDatabase",
                                "glue:GetPartitions",
                                "glue:GetTable"
                              ],
                              "Effect": "Allow",
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "s3:AbortMultipartUpload",
                                "s3:CreateBucket",
                                "s3:GetBucketLocation",
                                "s3:GetObject",
                                "s3:ListBucket",
                                "s3:ListBucketMultipartUploads",
                                "s3:ListMultipartUploadParts",
                                "s3:PutBucketPublicAccessBlock",
                                "s3:PutObject"
                              ],
                              "Effect": "Allow",
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "thermometerstorageA03733C7",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "thermometerstorageA03733C7",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:aws:logs:",
                                    {
                                      "Ref": "AWS::Region"
                                    },
                                    ":",
                                    {
                                      "Ref": "AWS::AccountId"
                                    },
                                    ":*"
                                  ]
                                ]
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policyName": "athenaRoleDefaultPolicy7218C7E2",
                        "roles": [
                          {
                            "Ref": "athenaRoleC02D81FF"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                      "version": "2.26.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Policy",
                  "version": "2.26.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_iam.Role",
              "version": "2.26.0"
            }
          },
          "AthenaRoleArn": {
            "id": "AthenaRoleArn",
            "path": "CdkIotStack/AthenaRoleArn",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.26.0"
            }
          },
          "LambdaAthena": {
            "id": "LambdaAthena",
            "path": "CdkIotStack/LambdaAthena",
            "children": {
              "Code": {
                "id": "Code",
                "path": "CdkIotStack/LambdaAthena/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "CdkIotStack/LambdaAthena/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.26.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "CdkIotStack/LambdaAthena/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.26.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.26.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "CdkIotStack/LambdaAthena/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                      },
                      "s3Key": "df02794ed34f7addb30c3347b77d3d8625966e0d228707542e91f7c935d6fe70.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "athenaRoleC02D81FF",
                        "Arn"
                      ]
                    },
                    "description": "query athena",
                    "environment": {
                      "variables": {
                        "athenaBucket": {
                          "Fn::GetAtt": [
                            "thermometerstorageA03733C7",
                            "Arn"
                          ]
                        },
                        "dbName": "themometerDb",
                        "workGroup": "themometer-workgroup"
                      }
                    },
                    "handler": "index.handler",
                    "runtime": "nodejs14.x",
                    "timeout": 20
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.26.0"
                }
              },
              "allInvocation": {
                "id": "allInvocation",
                "path": "CdkIotStack/LambdaAthena/allInvocation",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "LambdaAthenaB5D0C109",
                        "Arn"
                      ]
                    },
                    "principal": "apigateway.amazonaws.com"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                  "version": "2.26.0"
                }
              },
              "InvokeFcyXBRX02EWa52GlF+ECQiCzDt0fdRUDi4mo4foC5aU=": {
                "id": "InvokeFcyXBRX02EWa52GlF+ECQiCzDt0fdRUDi4mo4foC5aU=",
                "path": "CdkIotStack/LambdaAthena/InvokeFcyXBRX02EWa52GlF+ECQiCzDt0fdRUDi4mo4foC5aU=",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "LambdaAthenaB5D0C109",
                        "Arn"
                      ]
                    },
                    "principal": "apigateway.amazonaws.com"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                  "version": "2.26.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.Function",
              "version": "2.26.0"
            }
          },
          "LambdaAthenaARN": {
            "id": "LambdaAthenaARN",
            "path": "CdkIotStack/LambdaAthenaARN",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.26.0"
            }
          },
          "AccessLogs": {
            "id": "AccessLogs",
            "path": "CdkIotStack/AccessLogs",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CdkIotStack/AccessLogs/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                  "aws:cdk:cloudformation:props": {
                    "retentionInDays": 90
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.CfnLogGroup",
                  "version": "2.26.0"
                }
              },
              "Policy": {
                "id": "Policy",
                "path": "CdkIotStack/AccessLogs/Policy",
                "children": {
                  "ResourcePolicy": {
                    "id": "ResourcePolicy",
                    "path": "CdkIotStack/AccessLogs/Policy/ResourcePolicy",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Logs::ResourcePolicy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Fn::Join": [
                            "",
                            [
                              "{\"Statement\":[{\"Action\":[\"logs:CreateLogStream\",\"logs:PutLogEvents\"],\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"apigateway.amazonaws.com\"},\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "AccessLogs8B620ECA",
                                  "Arn"
                                ]
                              },
                              "\"}],\"Version\":\"2012-10-17\"}"
                            ]
                          ]
                        },
                        "policyName": "CdkIotStackAccessLogsPolicy52692585"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_logs.CfnResourcePolicy",
                      "version": "2.26.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.ResourcePolicy",
                  "version": "2.26.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_logs.LogGroup",
              "version": "2.26.0"
            }
          },
          "temperature-api-role": {
            "id": "temperature-api-role",
            "path": "CdkIotStack/temperature-api-role",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CdkIotStack/temperature-api-role/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "apigateway.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "managedPolicyArns": [
                      "arn:aws:iam::aws:policy/AWSLambdaExecute"
                    ],
                    "roleName": "TemperatureApiRole"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                  "version": "2.26.0"
                }
              },
              "DefaultPolicy": {
                "id": "DefaultPolicy",
                "path": "CdkIotStack/temperature-api-role/DefaultPolicy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CdkIotStack/temperature-api-role/DefaultPolicy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "lambda:InvokeFunction",
                              "Effect": "Allow",
                              "Resource": "*"
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policyName": "temperatureapiroleDefaultPolicyE68CE1EB",
                        "roles": [
                          {
                            "Ref": "temperatureapirole177D4DBD"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                      "version": "2.26.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Policy",
                  "version": "2.26.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_iam.Role",
              "version": "2.26.0"
            }
          },
          "ApiThermometer": {
            "id": "ApiThermometer",
            "path": "CdkIotStack/ApiThermometer",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CdkIotStack/ApiThermometer/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::RestApi",
                  "aws:cdk:cloudformation:props": {
                    "description": "API Gateway for themometer",
                    "endpointConfiguration": {
                      "types": [
                        "REGIONAL"
                      ]
                    },
                    "name": "ApiThermometer"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnRestApi",
                  "version": "2.26.0"
                }
              },
              "CloudWatchRole": {
                "id": "CloudWatchRole",
                "path": "CdkIotStack/ApiThermometer/CloudWatchRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CdkIotStack/ApiThermometer/CloudWatchRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "apigateway.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.26.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.26.0"
                }
              },
              "Account": {
                "id": "Account",
                "path": "CdkIotStack/ApiThermometer/Account",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Account",
                  "aws:cdk:cloudformation:props": {
                    "cloudWatchRoleArn": {
                      "Fn::GetAtt": [
                        "ApiThermometerCloudWatchRole54ECCD47",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnAccount",
                  "version": "2.26.0"
                }
              },
              "Deployment": {
                "id": "Deployment",
                "path": "CdkIotStack/ApiThermometer/Deployment",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CdkIotStack/ApiThermometer/Deployment/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Deployment",
                      "aws:cdk:cloudformation:props": {
                        "restApiId": {
                          "Ref": "ApiThermometerE79D55B8"
                        },
                        "description": "Automatically created by the RestApi construct"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDeployment",
                      "version": "2.26.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Deployment",
                  "version": "2.26.0"
                }
              },
              "DeploymentStage.dev": {
                "id": "DeploymentStage.dev",
                "path": "CdkIotStack/ApiThermometer/DeploymentStage.dev",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CdkIotStack/ApiThermometer/DeploymentStage.dev/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Stage",
                      "aws:cdk:cloudformation:props": {
                        "restApiId": {
                          "Ref": "ApiThermometerE79D55B8"
                        },
                        "accessLogSetting": {
                          "destinationArn": {
                            "Fn::GetAtt": [
                              "AccessLogs8B620ECA",
                              "Arn"
                            ]
                          },
                          "format": "{\"requestId\":\"$context.requestId\",\"ip\":\"$context.identity.sourceIp\",\"user\":\"$context.identity.user\",\"requestTime\":\"$context.requestTime\",\"httpMethod\":\"$context.httpMethod\",\"resourcePath\":\"$context.resourcePath\",\"status\":\"$context.status\",\"protocol\":\"$context.protocol\",\"responseLength\":\"$context.responseLength\"}"
                        },
                        "deploymentId": {
                          "Ref": "ApiThermometerDeploymentCDF45838bf30d0681402aaf78fb56dd448ecf1a4"
                        },
                        "stageName": "dev"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnStage",
                      "version": "2.26.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Stage",
                  "version": "2.26.0"
                }
              },
              "Endpoint": {
                "id": "Endpoint",
                "path": "CdkIotStack/ApiThermometer/Endpoint",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.26.0"
                }
              },
              "Default": {
                "id": "Default",
                "path": "CdkIotStack/ApiThermometer/Default",
                "children": {
                  "status": {
                    "id": "status",
                    "path": "CdkIotStack/ApiThermometer/Default/status",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "CdkIotStack/ApiThermometer/Default/status/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "ApiThermometerE79D55B8",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "status",
                            "restApiId": {
                              "Ref": "ApiThermometerE79D55B8"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.26.0"
                        }
                      },
                      "GET": {
                        "id": "GET",
                        "path": "CdkIotStack/ApiThermometer/Default/status/GET",
                        "children": {
                          "ApiPermission.CdkIotStackApiThermometer95DA6389.GET..status": {
                            "id": "ApiPermission.CdkIotStackApiThermometer95DA6389.GET..status",
                            "path": "CdkIotStack/ApiThermometer/Default/status/GET/ApiPermission.CdkIotStackApiThermometer95DA6389.GET..status",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "LambdaAthenaB5D0C109",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":",
                                      {
                                        "Ref": "ApiThermometerE79D55B8"
                                      },
                                      "/",
                                      {
                                        "Ref": "ApiThermometerDeploymentStagedevEF2750BC"
                                      },
                                      "/GET/status"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.26.0"
                            }
                          },
                          "ApiPermission.Test.CdkIotStackApiThermometer95DA6389.GET..status": {
                            "id": "ApiPermission.Test.CdkIotStackApiThermometer95DA6389.GET..status",
                            "path": "CdkIotStack/ApiThermometer/Default/status/GET/ApiPermission.Test.CdkIotStackApiThermometer95DA6389.GET..status",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "LambdaAthenaB5D0C109",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":",
                                      {
                                        "Ref": "ApiThermometerE79D55B8"
                                      },
                                      "/test-invoke-stage/GET/status"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.26.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "CdkIotStack/ApiThermometer/Default/status/GET/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "GET",
                                "resourceId": {
                                  "Ref": "ApiThermometerstatusE6B56D73"
                                },
                                "restApiId": {
                                  "Ref": "ApiThermometerE79D55B8"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "AWS",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "LambdaAthenaB5D0C109",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST",
                                  "requestTemplates": {
                                    "application/json": "#set($inputRoot = $input.path('$'))\n    {\n        \"deviceid\": \"$input.params('deviceid')\"\n    }"
                                  },
                                  "passthroughBehavior": "WHEN_NO_TEMPLATES",
                                  "integrationResponses": [
                                    {
                                      "statusCode": "200"
                                    }
                                  ],
                                  "credentials": {
                                    "Fn::GetAtt": [
                                      "temperatureapirole177D4DBD",
                                      "Arn"
                                    ]
                                  }
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "200",
                                    "responseModels": {
                                      "application/json": "Empty"
                                    }
                                  }
                                ],
                                "requestParameters": {
                                  "method.request.querystring.deviceid": true
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.26.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.26.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.26.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.ResourceBase",
                  "version": "2.26.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.RestApi",
              "version": "2.26.0"
            }
          },
          "apiUrl": {
            "id": "apiUrl",
            "path": "CdkIotStack/apiUrl",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.26.0"
            }
          },
          "cloudfront": {
            "id": "cloudfront",
            "path": "CdkIotStack/cloudfront",
            "children": {
              "Origin1": {
                "id": "Origin1",
                "path": "CdkIotStack/cloudfront/Origin1",
                "children": {
                  "S3Origin": {
                    "id": "S3Origin",
                    "path": "CdkIotStack/cloudfront/Origin1/S3Origin",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "CdkIotStack/cloudfront/Origin1/S3Origin/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
                          "aws:cdk:cloudformation:props": {
                            "cloudFrontOriginAccessIdentityConfig": {
                              "comment": "Identity for CdkIotStackcloudfrontOrigin10852A449"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_cloudfront.CfnCloudFrontOriginAccessIdentity",
                          "version": "2.26.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_cloudfront.OriginAccessIdentity",
                      "version": "2.26.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "constructs.Construct",
                  "version": "10.1.24"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "CdkIotStack/cloudfront/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudFront::Distribution",
                  "aws:cdk:cloudformation:props": {
                    "distributionConfig": {
                      "enabled": true,
                      "origins": [
                        {
                          "domainName": {
                            "Fn::GetAtt": [
                              "themometerwebA10CBA95",
                              "RegionalDomainName"
                            ]
                          },
                          "id": "CdkIotStackcloudfrontOrigin10852A449",
                          "s3OriginConfig": {
                            "originAccessIdentity": {
                              "Fn::Join": [
                                "",
                                [
                                  "origin-access-identity/cloudfront/",
                                  {
                                    "Ref": "cloudfrontOrigin1S3Origin57D92FB4"
                                  }
                                ]
                              ]
                            }
                          }
                        },
                        {
                          "domainName": {
                            "Fn::Select": [
                              2,
                              {
                                "Fn::Split": [
                                  "/",
                                  {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "https://",
                                        {
                                          "Ref": "ApiThermometerE79D55B8"
                                        },
                                        ".execute-api.",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ".",
                                        {
                                          "Ref": "AWS::URLSuffix"
                                        },
                                        "/",
                                        {
                                          "Ref": "ApiThermometerDeploymentStagedevEF2750BC"
                                        },
                                        "/"
                                      ]
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          "id": "CdkIotStackcloudfrontOrigin223C036B8",
                          "originPath": {
                            "Fn::Join": [
                              "",
                              [
                                "/",
                                {
                                  "Fn::Select": [
                                    3,
                                    {
                                      "Fn::Split": [
                                        "/",
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "https://",
                                              {
                                                "Ref": "ApiThermometerE79D55B8"
                                              },
                                              ".execute-api.",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ".",
                                              {
                                                "Ref": "AWS::URLSuffix"
                                              },
                                              "/",
                                              {
                                                "Ref": "ApiThermometerDeploymentStagedevEF2750BC"
                                              },
                                              "/"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            ]
                          },
                          "customOriginConfig": {
                            "originSslProtocols": [
                              "TLSv1.2"
                            ],
                            "originProtocolPolicy": "https-only"
                          }
                        }
                      ],
                      "defaultCacheBehavior": {
                        "pathPattern": "*",
                        "targetOriginId": "CdkIotStackcloudfrontOrigin10852A449",
                        "allowedMethods": [
                          "GET",
                          "HEAD",
                          "OPTIONS",
                          "PUT",
                          "PATCH",
                          "POST",
                          "DELETE"
                        ],
                        "cachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
                        "compress": true,
                        "viewerProtocolPolicy": "redirect-to-https"
                      },
                      "cacheBehaviors": [
                        {
                          "pathPattern": "/status*",
                          "targetOriginId": "CdkIotStackcloudfrontOrigin223C036B8",
                          "cachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
                          "compress": true,
                          "viewerProtocolPolicy": "redirect-to-https"
                        }
                      ],
                      "httpVersion": "http2",
                      "ipv6Enabled": true,
                      "priceClass": "PriceClass_200"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cloudfront.CfnDistribution",
                  "version": "2.26.0"
                }
              },
              "Origin2": {
                "id": "Origin2",
                "path": "CdkIotStack/cloudfront/Origin2",
                "constructInfo": {
                  "fqn": "constructs.Construct",
                  "version": "10.1.24"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_cloudfront.Distribution",
              "version": "2.26.0"
            }
          },
          "distributionDomainName": {
            "id": "distributionDomainName",
            "path": "CdkIotStack/distributionDomainName",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.26.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "CdkIotStack/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "CdkIotStack/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.26.0"
                }
              },
              "Condition": {
                "id": "Condition",
                "path": "CdkIotStack/CDKMetadata/Condition",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnCondition",
                  "version": "2.26.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.1.24"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.26.0"
        }
      }
    },
    "constructInfo": {
      "fqn": "aws-cdk-lib.App",
      "version": "2.26.0"
    }
  }
}